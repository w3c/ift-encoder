syntax = "proto3";

package ift.proto;

enum PatchEncoding {
  DEFAULT_ENCODING = 0;
  TABLE_KEYED_FULL = 1;
  TABLE_KEYED_PARTIAL = 2;
  GLYPH_KEYED = 3;

  // next = 4
}

message IFT {
  string url_template = 1;

  // Unique ID for this font. Can be used to validate patches before application.
  repeated uint32 id = 2;

  // This is the encoding for patches unless otherwise specified in the patch mapping.
  PatchEncoding default_patch_encoding = 3;

  repeated SubsetMapping subset_mapping = 4;
  
  // next = 5
}

message AxisRange {
  float start = 1;
  float end = 2;

  // next = 3;
}

// Maps from a subset description to a patch
message SubsetMapping {
  // == KEY ==

  // 'bias' is added to all values in codepoint_set.
  uint32 bias = 1;

  // The encoded bytes of a SparseBitSet (see: patch_subset/sparse_bit_set.h)
  bytes codepoint_set = 2;

  // List of features encoded using known ids, or the 4 byte tag as a uint32.
  repeated uint32 feature_index = 5;

  // List of ranges per axis tag.
  map<uint32, AxisRange> design_space = 7;

  // Re-use previously defined subset definitions, must have indices less than the index
  // for this entry (ensures no cycles). Any referenced definitions are unioned into this
  // one.
  repeated uint32 subset_indices = 6;

  // == VALUE ==

  int32 id_delta = 3;
  PatchEncoding patch_encoding = 4;

  // next = 8
}
