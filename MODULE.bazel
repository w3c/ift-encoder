module(
    name = "ift_encoder",
    repo_name = "ift_encoder",
)

# Bazel Modules

bazel_dep(name = "googletest", version = "1.17.0")
bazel_dep(name = "abseil-cpp", version = "20250814.0")
bazel_dep(name = "protobuf", version = "32.0")
bazel_dep(name = "riegeli", version = "0.0.0-20250822-9f2744d")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "rules_rust", version = "0.64.0")
bazel_dep(name = "glib", version = "2.82.2.bcr.5")
bazel_dep(name = "brotli", version = "1.1.0")

# Non Bazel Modules
http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# WOFF2 Encoder/Decoder
http_archive(
    name = "woff2",
    build_file = "//third_party:woff2.BUILD",
    sha256 = "730b7f9de381c7b5b09c81841604fa10c5dd67628822fa377b776ab7929fe18c",
    strip_prefix = "woff2-c8c0d339131e8f1889ae8aac0075913d98d9a722",
    url = "https://github.com/google/woff2/archive/c8c0d339131e8f1889ae8aac0075913d98d9a722.zip",
)

# Harfbuzz
http_archive(
    name = "harfbuzz",
    build_file = "//third_party:harfbuzz.BUILD",
    integrity = "sha256-0SazsSICV5gQEgXYPIhRmHo6ftm+fHxV3FqnLwLLtAA=",
    strip_prefix = "harfbuzz-d59f62ac14b98a0b8c72ec7a00eb76b22b1800c8",
    urls = ["https://github.com/harfbuzz/harfbuzz/archive/d59f62ac14b98a0b8c72ec7a00eb76b22b1800c8.zip"],
)

# Base 32 Hex
http_archive(
    name = "cppcodec",
    build_file = "//third_party:cppcodec.BUILD",
    integrity = "sha256-abpzBt/WJEKA0os255vhquwnQd2njfw6RryLFWsMRU0=",
    strip_prefix = "cppcodec-8019b8b580f8573c33c50372baec7039dfe5a8ce",
    url = "https://github.com/tplgy/cppcodec/archive/8019b8b580f8573c33c50372baec7039dfe5a8ce.zip",
)

# IFT Specification - for Feature Registry
http_archive(
    name = "ift_spec",
    build_file = "//third_party:ift_spec.BUILD",
    sha256 = "6c97f8da6a6997794da5417823711b54a7ace6ff8c7beb71824386d1e19a9ac5",
    strip_prefix = "IFT-9594d696a6b35c22f97b072a1d64db603c204dfb",
    urls = ["https://github.com/w3c/IFT/archive/9594d696a6b35c22f97b072a1d64db603c204dfb.zip"],
)

# Fontations
http_archive(
    name = "fontations",
    urls = ["https://github.com/googlefonts/fontations/archive/1a8baba89aa129a899bc83b0b610881190f8bbad.zip"],
    strip_prefix = "fontations-1a8baba89aa129a899bc83b0b610881190f8bbad",
    build_file = "//third_party:fontations.BUILD",
    integrity = "sha256-vyDtQ7LJHdb+l0dz8IYs2jvw9bnQxNvhaZgyRLfnlTA=",
)


# Rust Deps Config

crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")

crate.from_cargo(
    name = "fontations_deps",
    cargo_lockfile = "//fontations:Cargo.lock",
    manifests = [
     "@fontations//:Cargo.toml",
     "@fontations//:fauntlet/Cargo.toml",
     "@fontations//:font-codegen/Cargo.toml",
     "@fontations//:font-test-data/Cargo.toml",
     "@fontations//:font-types/Cargo.toml",
     "@fontations//:fuzz/Cargo.toml",
     "@fontations//:incremental-font-transfer/Cargo.toml",
     "@fontations//:klippa/Cargo.toml",
     "@fontations//:otexplorer/Cargo.toml",
     "@fontations//:read-fonts/Cargo.toml",
     "@fontations//:shared-brotli-patch-decoder/Cargo.toml",
     "@fontations//:skrifa/Cargo.toml",
     "@fontations//:write-fonts/Cargo.toml",
    ],
)
use_repo(crate, "fontations_deps")

# Hedron - for generating compiles_commands.json

bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    commit = "f5fbd4cee671d8d908f37c83abaf70fba5928fc7",
)
