on: [push, pull_request]
name: Continous Integration
jobs:
  check_tests_ubuntu:
    name: Check Tests (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.1.0/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"

      - name: Test (Default Build)
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test --enable_workspace //util/... //ift/... //common/... --test_output=all

      - name: Test (Optimized Build)
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test --enable_workspace -c opt //util/... //ift/... //common/... --test_output=all

#      TODO renable once re-implemented using a wasm build of the rust client.
#      - name: Build Webassembly
#        run: |
#          "${GITHUB_WORKSPACE}/bin/bazel" build --enable_workspace --copt=-Os js_client:patch_subset_wasm js_client:ift_wasm
#        env:
#          CC: gcc-9

  check_tests_osx:
    name: Check Tests (Mac OS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master

      - name: Install bazel
        run: |
          brew install bazelisk

      - name: Run Tests
        run: bazel test --enable_workspace //util/... //ift/... //common/... --test_output=all
    
  check_formatting:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v1

      - name: Install clang
        run: |
          wget "http://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz" -O clang.tar.xz
          tar xf clang.tar.xz
          cd clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04
          sudo cp -R * /usr/local
          cd ..
          rm -rf clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04

      - name: Run Check Script
        run: ./check-format.sh
